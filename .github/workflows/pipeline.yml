name: Pipeline

on:
  push:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: us-east-1
  CODEDEPLOY_APP: MyLambdaCodeDeployApp
  CODEDEPLOY_GROUP: MyLambdaDeploymentGroup
  FUNCTION_ALIAS: live

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    # old_version: ${{ steps.versions.outputs.old_version }}
    # new_version: ${{ steps.versions.outputs.new_version }}
    steps:
      - uses: actions/checkout@v4
      - name: Generate matrix
        id: matrix
        uses: hellofresh/action-changed-files@v3
        with:
          pattern: "lambda/(?P<dir>[^/]+)"
          default-patterns: |
            '.github/workflows/**'
      - name: Echo matrix
        run: |
          echo "Matrix: ${{ toJson(steps.matrix.outputs) }}"

  deploy:
    needs: generate-matrix
    runs-on: ubuntu-latest
    if: needs.generate-matrix.outputs.matrix != '[]'
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    defaults:
      run:
        working-directory: lambda/${{ matrix.dir }}
    steps:
      - uses: actions/checkout@v4
      - name: Generate JSON File for Deployment
        run: |
          echo "Matrix: ${{matrix.dir}}"

      - id: versions
        run: |
          echo "old_version=$(aws lambda get-alias --function-name ${{matrix.dir}} --name ${FUNCTION_ALIAS} --query FunctionVersion --output text)" >> $GITHUB_ENV

          echo "new_version=$(aws lambda publish-version --function-name ${{matrix.dir}} --query Version --output text)" >> $GITHUB_ENV

      - name: Generate JSON File for Deployment
        run: |
          cat <<EOF >deployment.json
          {
              "applicationName": "${CODEDEPLOY_APP}",
              "deploymentGroupName": "${CODEDEPLOY_GROUP}",
              "revision": {
                  "revisionType": "AppSpecContent",
                  "appSpecContent": {
                      "content": "{\"version\":0.0,\"Resources\":[{\"TargetService\":{\"Type\":\"AWS::Lambda::Function\",\"Properties\":{\"Name\":\"${{matrix.dir}}\",\"Alias\":\"live\",\"CurrentVersion\":${{steps.versions.outputs.old_version}},\"TargetVersion\":${{steps.versions.outputs.new_version}}}}}]}"
                  }
              }
          }
          EOF
      - run: cat deployment.json
      - name: Deploy
        run: |
          aws deploy create-deployment --cli-input-json file://deployment.json
